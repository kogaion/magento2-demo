<?php
/**
 * Created by PhpStorm.
 * User: lucian.toza
 * Date: 09/07/2018
 * Time: 11:15
 */

namespace Mastering\ToDoCrud\Block;


use Magento\Catalog\Model\ProductRepository;
use Magento\Cms\Model\PageRepository;
use Magento\Framework\Api\Search\SearchCriteriaFactory;
use Magento\Framework\AuthorizationInterface;
use Magento\Framework\View\Element\Template;
use Mastering\ToDoCrud\Model\Item;
use Mastering\ToDoCrud\Model\ItemFactory; // @autogenerated

class Crud extends Template
{
    protected $itemFactory;
    protected $productRepository;
    protected $pageRepository;
    protected $searchCriteriaFactory;
    protected $auth;

    public function __construct(
        Template\Context $context,
        ItemFactory $itemFactory,
        PageRepository $pageRepository,
        ProductRepository $productRepository,
        SearchCriteriaFactory $searchCriteriaFactory,
        AuthorizationInterface $auth,
        array $data = [])
    {
        $this->itemFactory = $itemFactory;
        $this->productRepository = $productRepository;
        $this->pageRepository = $pageRepository;
        $this->searchCriteriaFactory = $searchCriteriaFactory;
        $this->auth = $auth;

        parent::__construct($context, $data);
    }

    public function _prepareLayout()
    {
        /**
         * @var Item $model
         */
//        $item = $this->itemFactory->create();
//        $item->setData("title", "Finish my Magento article");
//        $item->save();

        $loadedItem = $this->itemFactory->create();
        $loadedItem->load(2);

        var_dump($loadedItem->getTitle());
        var_dump($loadedItem->getData());

        $itemForCollection = $this->itemFactory->create();
        $itemCollection = $itemForCollection->getCollection();

        foreach ($itemCollection as $item) {
            var_dump("____");
            var_dump($item->getId());
            var_dump($item->getTitle());
        }



        $product = $this->productRepository->getById(2);
        var_dump($product->getName());

        $searchCriteria = $this->searchCriteriaFactory->create()->setPageSize(5)->setFilterGroups([]);
        $products = $this->productRepository->getList($searchCriteria);
        var_dump($products->getTotalCount());


    }

    public function isLoggedIn()
    {
        return $this->auth->isAllowed('Mastering_ToDoCrud::config');
    }
}